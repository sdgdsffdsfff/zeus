package com.ctrip.zeus.service.build;

import com.ctrip.zeus.model.entity.Group;
import com.ctrip.zeus.model.entity.Slb;
import com.ctrip.zeus.model.entity.TrafficPolicy;
import com.ctrip.zeus.model.entity.VirtualServer;
import com.ctrip.zeus.nginx.entity.ConfFile;
import com.ctrip.zeus.service.Repository;

import java.util.List;
import java.util.Map;
import java.util.Set;

/**
 * Created by fanqq on 2015/3/30.
 */
public interface NginxConfBuilder extends Repository {

    /**
     * generate nginx config
     *
     * @param slb the slb entity
     * @return nginx  config
     * @throws Exception
     */
    String generateNginxConf(Slb slb) throws Exception;

    /**
     * generate nginx server confs
     *
     * @param slb      the under building slb
     * @param vs       the under building virtual server
     * @param policies policies of the vs
     * @param groups   groups of the vs
     * @return nginx server confs
     * @throws Exception
     */
    String generateServerConf(Slb slb, VirtualServer vs, List<TrafficPolicy> policies, List<Group> groups) throws Exception;

    /**
     * Get nginx upstream conf files. Conf name is generated by related vs-id joined by '_'.
     * Not all input groups will get a corresponding upstream conf according to generation rule described above.
     *
     * @param vsCandidates
     * @param vs
     * @param groups
     * @param allDownServers
     * @param allUpGroupServers
     * @param visited           generated vs files
     * @return upstream conf file list
     * @throws Exception
     */
    List<ConfFile> generateUpstreamsConf(Set<Long> vsCandidates, VirtualServer vs, List<Group> groups,
                                         Set<String> allDownServers, Set<String> allUpGroupServers,
                                         Set<String> visited) throws Exception;
}
