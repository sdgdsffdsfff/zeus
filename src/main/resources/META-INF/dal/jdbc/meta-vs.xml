<?xml version="1.0" encoding="UTF-8"?>
<entities do-package="com.ctrip.zeus.dal.core" gen="true" do-class-suffix="Do">
    <entity name="archive-vs" table="archive_vs" alias="av" do-class="MetaVsArchiveDo">
        <var name="rel-id" value-type="Long"/>
        <var name="ids" value-type="Long[]"/>
        <var name="hashes" value-type="Integer[]"/>
        <var name="id-version-array" value-type="String[]"/>
        <readsets>
            <readset name="IDONLY">
                <member name="id"/>
            </readset>
        </readsets>
        <query-defs>
            <!--These queries are particularly designed for batch selection required task executors-->
            <query name="find-all-by-slb-id" type="SELECT" multiple="true">
                <param name="rel-id"/>
                <statement>
                    <![CDATA[
                    SELECT <FIELDS/>
                    FROM <TABLE/>
                    INNER JOIN (SELECT rvs.vs_id, rvs.vs_version
                        FROM r_vs_slb rvs
                        INNER JOIN r_vs_status rvss
                            ON rvs.vs_id = rvss.vs_id
                            AND rvs.slb_id = ${rel-id}
                            AND (rvs.vs_version = rvss.online_version OR rvs.vs_version = rvss.offline_version)) AS tmp
                    ON av.vs_id = tmp.vs_id AND av.version = tmp.vs_version
                    ]]>
                </statement>
            </query>
            <query name="find-versionized-by-ids" type="SELECT" multiple="true">
                <param name="ids"/>
                <statement>
                    <![CDATA[
                    SELECT <FIELDS/>
                    FROM <TABLE/>
                    INNER JOIN r_vs_status rvs
                    ON av.vs_id = rvs.vs_id
                        AND (av.version = rvs.online_version OR av.version = rvs.offline_version)
                    WHERE av.vs_id IN <IN>${ids}</IN>
                    ]]>
                </statement>
            </query>
            <!--end-->
            <query name="find-all-by-ids" type="SELECT" multiple="true">
                <param name="ids"/>
                <statement>
                    <![CDATA[
                    SELECT <FIELDS/>
                    FROM <TABLE/>
                    WHERE <FIELD name='id'/> in <IN>${ids}</IN>
                    ]]>
                </statement>
            </query>
            <query name="find-all-by-id-version" type="SELECT" multiple="true">
                <param name="hashes"/>
                <param name="id-version-array"/>
                <statement>
                    <![CDATA[
                    SELECT <FIELDS/>
                    FROM <TABLE/>
                    WHERE <FIELD name='hash'/> in <IN>${hashes}</IN>
                    HAVING CONCAT(vs_id, ',', version) in <IN>${id-version-array}</IN>
                    ORDER BY <FIELD name='vs-id'/>
                    ]]>
                </statement>
            </query>
            <query name="insert-or-update" type="INSERT">
                <statement>
                    <![CDATA[
                    INSERT INTO <TABLE/>(<FIELDS/>)
                    VALUES(<VALUES/>)
                    ON DUPLICATE KEY UPDATE
                    content = values(content)
                    ]]>
                </statement>
            </query>
            <query name="find-by-vs-and-version" type="SELECT">
                <param name="vs-id"/>
                <param name="version"/>
                <statement>
                    <![CDATA[
                    SELECT <FIELDS/>
                    FROM <TABLE/>
                    WHERE <FIELD name='vs-id'/> = ${vs-id}
                        AND <FIELD name='version'/> = ${version}
                    ]]>
                </statement>
            </query>
            <query name="find-max-version-by-vses" type="SELECT" multiple="true">
                <param name="ids"/>
                <statement>
                    <![CDATA[
                    SELECT <FIELDS/>
                    FROM <TABLE/>
                    WHERE (<FIELD name='vs-id'/>, <FIELD name='version'/>) IN
                        (SELECT vs_id, MAX(version)
                        FROM archive_vs
                        WHERE vs_id IN <IN>${ids}</IN>
                        GROUP BY vs_id)
                    ORDER BY <FIELD name='vs-id'/>
                    ]]>
                </statement>
            </query>
            <!-- for cleansing job -->
            <query name="delete-by-vs-id-less-than-version" type="DELETE">
                <param name="vs-id"/>
                <param name="version"/>
                <statement>
                    <![CDATA[
                    DELETE FROM <TABLE/>
                    WHERE <FIELD name='vs-id'/> = ${vs-id}
                    AND <FIELD name='version'/> < ${version}
                    ]]>
                </statement>
            </query>
            <query name="delete-by-vs" type="DELETE">
                <param name="vs-id"/>
                <statement>
                    <![CDATA[
                    DELETE FROM <TABLE/>
                    WHERE <FIELD name='vs-id'/> = ${vs-id}
                    ]]>
                </statement>
            </query>
            <query name="update-content-by-id" type="UPDATE" batch="true">
                <param name="id"/>
                <statement>
                    <![CDATA[
                    UPDATE <TABLE/>
                    SET <FIELD name='content'/> = ${content}
                    WHERE <FIELD name='id'/> = ${id}
                    ]]>
                </statement>
            </query>
        </query-defs>
    </entity>
    <entity name="slb-virtual-server" table="slb_virtual_server" alias="svs" do-class="SlbVirtualServerDo">
        <member name="created-time" field="created_time" value-type="Date" insert-expr="now()"/>
        <var name="ids" value-type="Long[]"/>
        <readsets>
            <readset name="IDONLY">
                <member name="id"/>
            </readset>
        </readsets>
        <query-defs>
            <query name="insert" type="INSERT">
                <statement>
                    <![CDATA[
                    INSERT INTO <TABLE/>(<FIELDS/>)
                    VALUES(<VALUES/>)
                    ]]>
                </statement>
            </query>
            <query name="update" type="UPDATE">
                <param name="id"/>
                <statement>
                    <![CDATA[
                    UPDATE <TABLE/>
                    SET <FIELD name='slb-id'/> = ${slb-id},
                        <FIELD name='name'/> = ${name},
                        <FIELD name='port'/> = ${port},
                        <FIELD name='is-ssl'/> = ${is-ssl},
                        <FIELD name='version'/> = ${version}
                    WHERE <FIELD name='id'/> = ${id}
                    ]]>
                </statement>
            </query>
            <query name="delete-by-id" type="DELETE">
                <param name="id"/>
                <statement>
                    <![CDATA[
                    DELETE FROM <TABLE/>
                    WHERE <FIELD name='id'/> = ${id}
                    ]]>
                </statement>
            </query>
            <query name="find-by-name" type="SELECT">
                <param name="name"/>
                <statement>
                    <![CDATA[
                    SELECT <FIELDS/>
                    FROM <TABLE/>
                    WHERE <FIELD name='name'/> = ${name}
                    ]]>
                </statement>
            </query>
            <query name="search-by-name" type="SELECT" multiple="true">
                <param name="name"/>
                <statement>
                    <![CDATA[
                    SELECT <FIELDS/>
                    FROM <TABLE/>
                    WHERE <FIELD name='name'/> like ${name}
                    ]]>
                </statement>
            </query>
            <query name="find-all" type="SELECT" multiple="true">
                <statement>
                    <![CDATA[
                    SELECT <FIELDS/>
                    FROM <TABLE/>
                    ]]>
                </statement>
            </query>
            <query name="find-all-by-ssl" type="SELECT" multiple="true">
                <param name="is-ssl"/>
                <statement>
                    <![CDATA[
                    SELECT <FIELDS/>
                    FROM <TABLE/>
                    WHERE <FIELD name='is-ssl'/> = ${is-ssl}
                    ]]>
                </statement>
            </query>
            <query name="find-all-by-ids" type="SELECT" multiple="true">
                <param name="ids"/>
                <statement>
                    <![CDATA[
                    SELECT <FIELDS/>
                    FROM <TABLE/>
                    WHERE <FIELD name='id'/> in <IN>${ids}</IN>
                    ]]>
                </statement>
            </query>
        </query-defs>
    </entity>
</entities>

