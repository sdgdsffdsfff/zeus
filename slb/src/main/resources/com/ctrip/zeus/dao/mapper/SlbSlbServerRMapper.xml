<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ctrip.zeus.dao.mapper.SlbSlbServerRMapper">
  <resultMap id="BaseResultMap" type="com.ctrip.zeus.dao.entity.SlbSlbServerR">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="slb_id" jdbcType="BIGINT" property="slbId" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="slb_version" jdbcType="INTEGER" property="slbVersion" />
    <result column="DataChange_LastTime" jdbcType="TIMESTAMP" property="datachangeLasttime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, slb_id, ip, slb_version, DataChange_LastTime
  </sql>
  <select id="selectByExample" parameterType="com.ctrip.zeus.dao.entity.SlbSlbServerRExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from slb_slb_server_r
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from slb_slb_server_r
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    <if test="example.rows != null">
      <if test="example.offset != null">
        limit ${example.offset}, ${example.rows}
      </if>
      <if test="example.offset == null">
        limit ${example.rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from slb_slb_server_r
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from slb_slb_server_r
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from slb_slb_server_r
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ctrip.zeus.dao.entity.SlbSlbServerRExample">
    delete from slb_slb_server_r
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ctrip.zeus.dao.entity.SlbSlbServerR">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into slb_slb_server_r (slb_id, ip, slb_version, 
      DataChange_LastTime)
    values (#{slbId,jdbcType=BIGINT}, #{ip,jdbcType=VARCHAR}, #{slbVersion,jdbcType=INTEGER}, 
      #{datachangeLasttime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ctrip.zeus.dao.entity.SlbSlbServerR">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into slb_slb_server_r
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="slbId != null">
        slb_id,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="slbVersion != null">
        slb_version,
      </if>
      <if test="datachangeLasttime != null">
        DataChange_LastTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="slbId != null">
        #{slbId,jdbcType=BIGINT},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="slbVersion != null">
        #{slbVersion,jdbcType=INTEGER},
      </if>
      <if test="datachangeLasttime != null">
        #{datachangeLasttime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ctrip.zeus.dao.entity.SlbSlbServerRExample" resultType="java.lang.Long">
    select count(*) from slb_slb_server_r
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update slb_slb_server_r
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.slbId != null">
        slb_id = #{record.slbId,jdbcType=BIGINT},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.slbVersion != null">
        slb_version = #{record.slbVersion,jdbcType=INTEGER},
      </if>
      <if test="record.datachangeLasttime != null">
        DataChange_LastTime = #{record.datachangeLasttime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update slb_slb_server_r
    set id = #{record.id,jdbcType=BIGINT},
      slb_id = #{record.slbId,jdbcType=BIGINT},
      ip = #{record.ip,jdbcType=VARCHAR},
      slb_version = #{record.slbVersion,jdbcType=INTEGER},
      DataChange_LastTime = #{record.datachangeLasttime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ctrip.zeus.dao.entity.SlbSlbServerR">
    update slb_slb_server_r
    <set>
      <if test="slbId != null">
        slb_id = #{slbId,jdbcType=BIGINT},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="slbVersion != null">
        slb_version = #{slbVersion,jdbcType=INTEGER},
      </if>
      <if test="datachangeLasttime != null">
        DataChange_LastTime = #{datachangeLasttime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ctrip.zeus.dao.entity.SlbSlbServerR">
    update slb_slb_server_r
    set slb_id = #{slbId,jdbcType=BIGINT},
      ip = #{ip,jdbcType=VARCHAR},
      slb_version = #{slbVersion,jdbcType=INTEGER},
      DataChange_LastTime = #{datachangeLasttime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.ctrip.zeus.dao.entity.SlbSlbServerRExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from slb_slb_server_r
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from slb_slb_server_r
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="upsertSelective" keyColumn="id" keyProperty="id" parameterType="com.ctrip.zeus.dao.entity.SlbSlbServerR" useGeneratedKeys="true">
    insert into slb_slb_server_r
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="slbId != null">
        slb_id,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="slbVersion != null">
        slb_version,
      </if>
      <if test="datachangeLasttime != null">
        DataChange_LastTime,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="slbId != null">
        #{slbId,jdbcType=BIGINT},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="slbVersion != null">
        #{slbVersion,jdbcType=INTEGER},
      </if>
      <if test="datachangeLasttime != null">
        #{datachangeLasttime,jdbcType=TIMESTAMP},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="slbId != null">
        slb_id = #{slbId,jdbcType=BIGINT},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="slbVersion != null">
        slb_version = #{slbVersion,jdbcType=INTEGER},
      </if>
      <if test="datachangeLasttime != null">
        DataChange_LastTime = #{datachangeLasttime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <insert id="upsert" keyColumn="id" keyProperty="id" parameterType="com.ctrip.zeus.dao.entity.SlbSlbServerR" useGeneratedKeys="true">
    insert into slb_slb_server_r
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      slb_id,
      ip,
      slb_version,
      DataChange_LastTime,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      #{slbId,jdbcType=BIGINT},
      #{ip,jdbcType=VARCHAR},
      #{slbVersion,jdbcType=INTEGER},
      #{datachangeLasttime,jdbcType=TIMESTAMP},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      slb_id = #{slbId,jdbcType=BIGINT},
      ip = #{ip,jdbcType=VARCHAR},
      slb_version = #{slbVersion,jdbcType=INTEGER},
      DataChange_LastTime = #{datachangeLasttime,jdbcType=TIMESTAMP},
    </trim>
  </insert>

  <!--Self defined query-->
  <select id="findAllBySlbOfflineVersion" resultMap="BaseResultMap">
    select
    sssra.id, sssra.slb_id, sssra.ip, sssra.slb_version, sssra.DataChange_LastTime
    from slb_slb_server_r as sssra
    INNER JOIN slb_slb_status_r as sssr
    ON sssra.slb_id = sssr.slb_id
    AND sssra.slb_version = sssr.offline_version
    WHERE sssr.id IS NOT NULL
  </select>
  <insert id="batchInsert" parameterType="list">
    insert into slb_slb_server_r (slb_id, ip, slb_version)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.slbId,jdbcType=BIGINT},
      #{item.ip,jdbcType=VARCHAR},
      #{item.slbVersion,jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="batchInsertIncludeId" parameterType="list">
    insert into slb_slb_server_r (id,
    slb_id,
    ip,
    slb_version,
    DataChange_LastTime)
    <trim prefix="values ">
      <foreach collection="list" item="item" separator=",">
        (#{item.id,jdbcType=BIGINT},
        #{item.slbId,jdbcType=BIGINT},
        #{item.ip,jdbcType=VARCHAR},
        #{item.slbVersion,jdbcType=INTEGER},
        #{item.datachangeLasttime,jdbcType=TIMESTAMP})
      </foreach>
    </trim>
  </insert>
  <update id="batchUpdate" parameterType="list">
    <foreach collection="list" item="item" index="index" open="" close="" separator=";">
      update slb_slb_server_r
      <set>
        slb_id = ${item.slbId},
        ip = '${item.ip}',
        slb_version= ${item.slbVersion}
      </set>
      where id = ${item.id}
    </foreach>
  </update>
  <delete id="batchDelete" parameterType="list">
    delete from slb_slb_server_r
    where id IN
    <foreach collection="list" index="index" item="item"
             separator="," open="(" close=")">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </delete>
  <!--END-->
</mapper>